/*
------Log on 1/25/2020------
！！！！编辑的时候注意！！！！
int VNGame::VNRender和void VNGame::VNRun都没有做实现
想好了怎么实现就快写实现！！！

这里是现在想出来的一些思路：
	首先是int VNGame::VNRender
		先提供图像对象，图像位置（图像原点在左上角）
		然后获取纹理id，获取纹理宽高
		接下来，生成VAO、VBO、EBO
		最后，在我定义的几个vector类型的变量上把生成的这几个东西都加上去
		最后返回1，在前面几步中检查是否出错，如果出错直接在出错的地方输出错误，然后就地返回0
	然后是void VNGame::VNRun
		（这个其实没怎么想好，想到啥先写啥）
		首先肯定就是进入主循环
		注意先在int VNGame::VNInit里写好编译和配置Shader的代码
		然后正常的调用Shader渲染就行
		还有就是在输入设计好之后把输入之类的加进去
		以及，既然这里面有渲染相关的东西，再把int VNGame::VNRender改个名，改得更贴合函数的作用点

暂时只有这些了，还得记得做输入操作，再写好一个类或函数加进void VNGame::VNRun里。
------Log on 1/26/2021------
这怎么写？？？为什么昨天能说出这么多今天啥也写不出来了。。。
暂时先摸了，看看一会有没有思路吧。
------Log on 1/27/2021------
昨天最终啥也没干，今天继续吧。
------Log on 1/29/2021------
27日什么也没做。
继续。
------Log on 1/31/2021------
29日什么也没做。
使用几天时间做出了VNShader类的雏形，不过没有完成。
把int VNGame::VNRender更名为int VNGame::VNSetVertex。
增加void VNGame::VNSetShader函数，不过由于VNShader类没有写完，此函数还未编写。（也有弃用可能）
------Log on 2/01/2021------
添加了	VNWindow* mWindow	与	VNShader* mShader	两个指针，分别指向所用窗口和着色器。
添加了void VNGame::VNSetWindow函数。
编写void VNGame::VNSetWindow和void VNGame::VNSetShader的具体内容。
稍微有点问题，但是下次再说吧，今天得睡觉了。
------Log on 2/05/2021------
现在是2月5日的早上，前几天都摸了，今天再继续吧。
------Log on 2/10/2021------
我之前都干什么了？今天不知道能不能继续，先看看吧。
------Log on 2/12/2021------
设置Shader，配置图像位置和纹理位置的顶点链接。
------Log on 2/16/2021------
做好Shader并测试成功，删除了Shader的读取文件功能，改为直接传入Shader。
------Log on 2/17/2021------
将void VNShader::VNUseShader转为private。
------Log on 2/22/2021------
Log停用。
*/